# vim: ft=sh

# Shell is non-interactive. Be done now
[[ $- != *i* ]] && return

# use strict (cannot work with third party modules badly written...)
#set -u

# Configuration
typeset MYSHELL_HUB="https://github.com/saruspete/myshell.git"
typeset MYSHELL_DIR="$HOME/.myshell"
typeset MYSHELL_LIB="$MYSHELL_DIR/lib"
typeset MYSHELL_BIN="$MYSHELL_DIR/bin"
typeset MYSHELL_EXT="$MYSHELL_DIR/home"
typeset MYSHELL_LOC="$MYSHELL_DIR/local"
typeset MYSHELL_LCK="$MYSHELL_DIR/.initialized"

# #####################################
# Helper subs

function mys_merge {
	typeset dir="$1"
	typeset src="$2"
	typeset name="${src##*/}"
	typeset dst="$dir/$name"

	[[ -L "$dst" ]] && {
		echo "MyShell: cannot merge '$src' with '$dst': Target is a symlink"
		return 1
	}

	# If target file exists, try to merge files
	if [[ -e "$dst" ]]; then
		# Prepare the merge
		typeset loc="$MYSHELL_LOC/$name"
		cp -a "$dst" "$loc"

		# Backup local and clear destination
		mv "$dst" "${dst}.mys.$(date +'%y%m%d_%H%M%S')"

		# Try to merge if file
		[[ -f "$loc" ]] && {
			cat "$src" >> "$loc"
			src="$loc"
		}
	fi

	# Symlink to source
	ln -s "$src" "$dst"
}

function mys_isavail {
	type $1 >/dev/null 2>&1
}

# update from origin
function mys_update {
	mys_isavail "git" || {
		echo "You need git to update MyShell automatically"
		return 1
	}
	
	if [[ -e "$MYSHELL_DIR/.git" ]]; then
		git -C "$MYSHELL_DIR" pull
	else
		git clone "$MYSHELL_HUB" "$MYSHELL_DIR"
	fi
}

# sync and send to another local hosts
function mys_sync {
	typeset hosts="$@"
}


# Load 
function mys_loadmod {
	typeset mod="$1"
	typeset val="$2"

	for file in $MYSHELL_LIB/by_$mod/$val; do
		[[ -e "$file" ]] || continue
		. "$file"
	done
}

function mys_path_append {

	for newpath in $@; do
		OIFS="$IFS"
		IFS=":"
		for p in $PATH; do
			[[ "$newpath" == "$p" ]] && {
				IFS="$OIFS"
				continue 2
			}
		done
		IFS="$OIFS"
		export PATH="$PATH:$newpath"
	done
}

function mys_setopt {
	if mys_isavail shopt; then
		shopt $@ 
	elif mys_isavail setopt; then
		setopt $@
	else
		echo "MyShell: Fatal error: shopt nor setopt are available. What shell are you using ?"
		return 1
	fi
}

# #####################################
# Main processing

# Load external configuration files
[[ -e "$MYSHELL_LCK" ]] || {
	echo "MyShell: Initializing local configuration files"
	typeset src=""
	mys_setopt -s dotglob
	for src in $MYSHELL_EXT/*; do
		[[ -e "$src" ]] || continue
	
		echo "MyShell: Merging $src in $HOME"
		mys_merge "$HOME" "$src"
	done
	mys_setopt -u dotglob

	date +'%y%m%d_%H%M%S' >| "$MYSHELL_LCK"
}

# Add custom binaries to PATH
mys_path_append "$MYSHELL_BIN"


# Load per-shell definitions
typeset mys_custom="$MYSHELL_DIR/myshell.${0##*/}"
if [[ -e "$mys_custom" ]]; then
	source "$mys_custom"
else
	echo "MyShell: No custom file found for shell $0"
fi

# Load custom modules
mys_loadmod "default" "*"
mys_loadmod "os" "$(uname -s)"
mys_loadmod "shell" "${0##*/}"
mys_loadmod "host" "$(uname -n)"
mys_loadmod "user" "$(id -nu)"
