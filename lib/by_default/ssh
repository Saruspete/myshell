# vim: ft=sh

typeset SSH_ENV="$HOME/.ssh/environment"
ssh_agent_start () {
	typeset lockfile="$SSH_ENV.lock"
	typeset locktime=5

	# Do a basic lock
	[ -s "$lockfile" ] && {
		echo "Lockfile $lockfile exists. Waiting $locktime secs for release"
		for i in $(seq $locktime); do
			[ -e "$lockfile" ] || break
			sleep 1
		done
	}

	# Double check for race condition
	set -o noclobber
	echo $$ > "$lockfile" || {
		sleep "$(($RANDOM%2)).$(($RANDOM%100))"
		typeset lockpid="$(cat $lockfile 2>/dev/null)"
		if [ -e "/proc/$lockpid/" ]; then
			echo "Race detected. Restarting sequence"
			ssh_agent_start
			return
		else
			echo "Stale ($lockpid) detected. Removing lockfile"
			\rm $lockfile
		fi
	}
	set +o noclobber

	# If we see a file, try to use it
	[ -s $SSH_ENV ] && {
		. "$SSH_ENV" > /dev/null
		[ -e "/proc/$SSH_AGENT_PID/exe" ] && return
	}

	# Start the agent
	echo "Initializing new SSH agent..."
	ssh-agent | sed 's/^echo/#echo/' > $SSH_ENV
	echo "Succeeded"
	chmod 600 "$SSH_ENV"
	source "$SSH_ENV" > /dev/null
	ssh-add

	\rm "$lockfile"
}


# Auto start the agent
if [ -f "$SSH_ENV" ]; then
	. "$SSH_ENV" > /dev/null

	# If the file exists, check its still valid
	[ -e "/proc/$SSH_AGENT_PID" ] && \
	[ "$(cat "/proc/$SSH_AGENT_PID/loginuid")" == "$(id -u)" ] || {
		echo "Stale ssh environment file. Restarting"
		ssh_agent_start
	}
else
	ssh_agent_start
fi
