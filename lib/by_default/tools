# vim: ft=sh

###########################################################
#
# Parsing tools
#

function charrepeat {
	typeset time="${1:-1}"
	typeset char="${2:- }"
	seq -s "$char" $time|tr -d '[:digit:]'
}

function regex {
	typeset rgx="$1"
	typeset idx="${2:-0}"
	awk 'match($0,/'$rgx'/, ary) { print ary['$idx']; }'
}

###########################################################
#
# System tools
#

function runasroot {
	typeset pref=""
	[[ "$(id -u)" != "0" ]] && pref=sudo
	$pref "$@"
}

# Read CPU MSR
function msr {
	(echo -n 'ibase=16;obase=2;'; runasroot rdmsr -X "$@") | bc | sed -r 's/(.{8})/\1 /g'
}

function lsofdelete {
	runasroot lsof 2>/dev/null| awk '/deleted/{print $(NF-3),$0}' | sort -n
}

function psl {
	ps -Leo tid,pid,ppid,user,pcpu,rss:10,pmem,state,cls,ni,pri,rtprio,psr,wchan:20,args
}


###########################################################
#
# Storage tools
#
function genrandom {
	pass="$(dd if=/dev/urandom bs=128 count=1 2>/dev/null | base64)"
	dd if=/dev/zero bs=16M count=16 | \
		openssl enc -aes-256-ctr -pass pass:"$pass" -nosalt
}

###########################################################
#
# Network tools
#

function httpheaders {
	typeset srv="$1"
	typeset prt="${2:-80}"
	exec 5<> /dev/tcp/$server/$port
	echo -e "HEAD / HTTP/1.0\nHost: ${server}\n\n" >&5
	cat 0<&5
	exec 5>&-
}

function testport {
	typeset server="$1"
	typeset port="$2"
	typeset proto="${3:-tcp}"
	exec 5<>/dev/$proto/$server/$port
	[[ $? -eq 0 ]] && exec 5<&-
}

###########################################################
#
# Binary tools
#

function _ldd {
	ldd $1 | awk 'NF>3 && $1 != "libc.so.6"{print $3}'
}

function lddr {
	[[ $# -eq 0 ]] && return

	typeset -i level="0"
	[[ ! -e "$1" ]] && [[ -z "$(\type -P $1)" ]] && {
		level="$1"
		shift
	}
	typeset pad="$(charrepeat $(($level * 4)) )"
	level="$(($level + 1))"

	for file in "$@"; do
		typeset realbin="$(type -P $file)"
		# First level is invocking one
		[[ "$level" == "1" ]] && {
			printf "== %s (%s)\n" "$file" "$realbin"
		}

		for lib in $(_ldd $realbin); do
			printf "%s  %s\n" "$pad" "$lib"
			lddr "$level" "$lib"
		done
	done
}

###########################################################
#
# Interface
#

function whileread {
	while read line; do
		"$@" $line
	done
}


###########################################################
#
# Fun
#

function mping {
	ping $1|awk -F[=\ ] '
		/me=/{
			t=$(NF-1)
			f=3000-14*log(t^20)
			c="play -q -n synth 1 pl " f
			print $0
			system(c)
		}'
}

function lolcat {
	# https://gist.github.com/Saruspete/c3a44074da132f62a018ea2255c71abf
	awk 'BEGIN {p=atan2(0,-1)/3} {n=split($0, c, ""); for(i=1; i<=n; i++) {t=0.1*(o+i/3); printf("\033[38;2;%d;%d;%dm%s%s", sin(t+0)*127 + 128,sin(t+2*p)*127+128,sin(t+4*p)*127+128, c[i], "\033[39m");}o+=3;printf("\n");}'
}



# Enable "thefuck" if available
mys_isavail "thefuck" && {
	#eval alias fuck='TF_CMD=$(TF_ALIAS=fuck PYTHONIOENCODING=utf-8 TF_SHELL_ALIASES=$(alias) thefuck $(fc -ln -1)) && eval $TF_CMD; history -s $TF_CMD'
	eval $(thefuck --alias)
}
