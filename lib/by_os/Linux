# vim: ft=sh

alias psg="ps auxf | grep"


# Courtesy of B. Binier
function showmodopt {
	[[ ! -e "/proc/modules" ]] && {
		echo "Module support is disabled on this machine"
		return 0
	}

	awk '{print $1}' /proc/modules | while read mod; do
		echo "Module: $mod"
		[[ -d "/sys/module/$mod/parameters" ]] && {
			for param in /sys/module/$mod/parameters/*; do
				# Direct read
				echo -en "\tParameter: $param --> "
				if [[ -r "$param" ]]; then
					echo $(<$param)
				# No read right, try sudo
				else 
					mys_isavail sudo && sudo cat $param 2>/dev/null
				fi
			done
		}
	done
}

# List modules
function lsmodr {
	_lsmodr 1 "$@"
}

function _lsmodr {

	typeset lvl="$1"; shift

	# Try to list each arg and its deps
	for mod in "$@"; do
		typeset deps="$(awk '$1=="'$mod'"{print $4}' /proc/modules|tr ',' ' ')"

		charrepeat $lvl "-" | tr -d '\n'
		awk '$1=="'$mod'"{print $1,$2,$3,$4}' /proc/modules

		[[ "$deps" != "-" ]] && {
			_lsmodr $(($lvl +1)) $deps
		}
	done | column -t
}

function rmmodr {

	# Try to unload each argument
	for mod in "$@"; do
		typeset    deps="$(awk '$1=="'$mod'"{print $4}' /proc/modules|tr ',' ' ')"
		typeset -i nref="$(awk '$1=="'$mod'"{print $3}' /proc/modules)"
		typeset -i ndep="$(echo $deps|wc -w)"
		[[ "$ndep" -lt "$nref" ]] && {
			echo "Wont be able to unload $mod: got $nref refs and $ndep deps"
			return 1
		}
		# Recurse if dependencies
		[[ $nref -gt 0 ]] && {
			rmmodr $deps || {
				echo "Failed dependency removal for '$mod'"
				return 1
			}
		}

		# check if not already unloaded by another dep
		[[ -n "$(awk '$1 =="'$mod'"' /proc/modules)" ]] && {
			# Do the unload
			runasroot rmmod $mod || {
				echo "Unable to remove '$mod': return $?"
				return 1
			}
		}
	done

}

function procenv {
	for pid in "$@"; do
		typeset pd="/proc/$pid"
		[[ -e "$pd/environ" ]] || continue;

		echo "==== $pid / $(<$pd/comm) $(readlink -f $pd/exe 2>/dev/null)" >&2
		cat $pd/environ | tr '\0' '\n' | sort
	done
}


# ShitstemD management
[[ "$(</proc/1/comm)" == "systemd" ]] && {

	# Disable fucking pager. If I want one, I'll call one.
	export SYSTEMD_PAGER=""
}
